#pragma once
#include "../bs.h"
#include "./Debug/build.def"
#include "./Ty/build.def"
#include "./Core/build.def"
#include "./Main/build.def"
#include "./CLI/build.def"
#include "./Zip/build.def"
#include "./FS/build.def"
#include "./Rexim/build.def"
#include "./SoundIo/build.def"
#include "./WASM/build.def"
#include "./MS/build.def"
#include "./Midi/build.def"
#include "./Vst/build.def"
#include "./Library/build.def"
#include "./NativePlugin/build.def"
#include "./UI/build.def"
#include "./Render/build.def"
#include "./GL/build.def"
#include "./Tar/build.def"
#include "./WASM3/build.def"
#include "./NanoVG/build.def"
#include "./Clay/build.def"

typedef struct {
    // Core
    Target debug;
    Target ty;
    Target core;
    Target main;
    Target cli;
    Target zip;
    Target fs;
    Target tar;

    // Userspace
    Target rexim;
    Target soundio;
    Target wasm;
    Target ms;

    Target vst;
    Target vst_host;
    Target midi;

    Target library;
    Target native_plugin;

    Target ui;
    Target render;
    Target gl;
    Target wasm3;
    Target nanovg;
    Target clay;
    // Target uiview;
} LibrariesTargets;


static auto const libraries = target([] {
    return (LibrariesTargets){
        .debug = debug,
        .ty = ty,
        .core = core,
        .main = main_,
        .cli = cli,
        .zip = zip,
        .fs = fs,
        .tar = tar,
        .rexim = rexim,
        .soundio = soundio,
        .wasm = wasm,
        .ms = ms,
        .vst = vst,
        .vst_host = vst_host,
        .midi = midi,
        .library = library,
        .native_plugin = native_plugin,
        .ui = ui,
        .render = render,
        .gl = gl,
        .wasm3 = wasm3,
        .nanovg = nanovg,
        .clay = clay,
    };

    // Target uiview;
});
