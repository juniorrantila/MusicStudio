#pragma once
#include "../bs.h"
#include "../Libraries/build.def"

auto const ms_tar = cc_binary("ms-tar", {
    .srcs = {
        "./ms-tar.cpp",
    },
    .compile_flags = {},
    .linker_flags = {},
    .target_triple = {},
    .deps = {
        libraries.cli,
        libraries.main,
        libraries.tar,
    }
});

auto const vst_dump = cc_binary("vst-dump", {
    .srcs = {
        "./vst-dump.cpp",
    },
    .compile_flags = {},
    .linker_flags = {},
    .target_triple = {},
    .deps = {
        libraries.ms,
        libraries.cli,
        libraries.main,
    }
});

auto const list_devices = cc_binary("list-devices", {
    .srcs = {
        "./list-devices.cpp",
    },
    .compile_flags = {},
    .linker_flags = {
#ifdef __APPLE__
    "-F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks",
    "-framework", "CoreFoundation",
    "-framework", "CoreAudio",
    "-framework", "AudioUnit",
#endif
    },
    .target_triple = {},
    .deps = {
        libraries.main,
        libraries.soundio,
        libraries.ty,
        libraries.cli,
    }
});

auto const vst_run_gui = cc_binary("vst-run-gui", {
    .srcs = {
        "./vst-run-gui.cpp",
    },
    .compile_flags = {},
    .linker_flags = {
#ifdef __APPLE__
    "-F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks",
    "-framework", "AppKit",
    "-framework", "OpenGL",
    "-framework", "CoreFoundation",
    "-framework", "CoreAudio",
    "-framework", "AudioUnit",
#endif
    },
    .target_triple = {},
    .deps = {
        libraries.main,
        libraries.ms,
        libraries.soundio,
        libraries.ty,
        libraries.cli,
        libraries.ui
    }
});
